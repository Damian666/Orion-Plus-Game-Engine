<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="rsMap.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>